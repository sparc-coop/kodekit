@inherits HighlightPageBase<UpdateDropdownsModel>
@page "/{kitId}/dropdowns"

<div class="dropdowns page">
    <div class="page__container">
        <header class="page--header">
            <div class="title">Elements</div>
            <h2>Dropdowns</h2>
            <p class="subheader">
                Use to select from a series of choices.
            </p>
        </header>
        <div class="content">
            @if (kit.Revision != null)
            {
                <EditForm EditContext="@Context">
                    <section>
                        <header>
                            <h3>Dropdown Styling</h3>
                            <p class="subheader">
                                The &lt;select&gt; element defines a dropdown list. The &lt;option&gt; elements define options that can be selected. To define a pre-selected option, add the selected attribute to the option.
                            </p>
                            <aside>This element inherits direct styling from <a href="@($"/{kitId}/inputs")">Inputs & Textareas</a> as defaults.</aside>
                        </header>
                        @if (Dropdown.OverwriteInherited)
                        {
                            <div class="inputs--wrapper">
                                <label>
                                    <InputNumber @bind-Value="Dropdown.Font.Size" min="1" />
                                    Font Size (px)
                                </label>
                                <label>
                                    <InputFontWeight @bind-Value=Dropdown.Font.Weight />
                                    Font Weight
                                </label>
                                <label>
                                    <InputNumber @bind-Value="Dropdown.Padding.Vertical" min="0" />
                                    Vertical Padding (px)
                                </label>
                                <label>
                                    <InputNumber @bind-Value="Dropdown.Padding.Horizontal" min="0" />
                                    Horizontal Padding (px)
                                </label>
                                <label>
                                    <InputNumber @bind-Value="Dropdown.Border.Radius" min="0" />
                                    Corner Radius (px)
                                </label>
                                <label>
                                    <InputNumber @bind-Value="Dropdown.Border.Width" min="0" />
                                    Border Width (px)
                                </label>
                            </div>
                        }
                        <div class="overwrite-styling">
                            <Switch @bind-Value=Dropdown.OverwriteInherited Title="Overwrite Inherited Styling" />
                        </div>
                        <Preview Kit=kit.Kit>
                                <select>
                                    <option>Dropdown Menu</option>
                                    <option>Default Row</option>
                                    <option selected>Selected Row</option>
                                    <option>Default Row</option>
                                </select>
                        </Preview>
                    </section>
                </EditForm>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public string? kitId { get; set; }

    (Kit Kit, KitRevision Revision) kit;
    Dropdown? Dropdown;
    EditContext? Context;

    protected async Task<(Kit Kit, KitRevision Revision)> GetAsync()
    {
        kit = await KitRepository.GetCurrentAsync(kitId);
        Dropdown = kit.Revision.Dropdowns;
        Context = new EditContext(kit.Revision.Dropdowns);
        return kit;
    }

    protected async Task UpdateAsync((Kit Kit, KitRevision Revision) kit)
    {
        await KitRepository.UpdateAsync(kit.Kit.Id, kit.Revision.Id);
    }
}
