@page "/{kitId}/icons"

<div class="icons page">
    <div class="page__container">
        <header class="page--header">
            <div class="title">Base Styles</div>
            <h2>Icons</h2>
            <p class="subheader">
                Provide visual symbols and logos.
            </p>
        </header>
        <div class="content">
            <section>
                <header>
                    <h3>Icon Sets</h3>
                    <p class="subheader">
                        There are several icon libraries available, each with a different style and syntax for use. The selected library will be automatically integrated into your stylesheet.
                    </p>
                </header>
                @if (kit.Kit != null)
                {
                    <EditForm EditContext="@Context">
                        <section>
                            <label>
                                <InputSelect @bind-Value="Icon.Name">
                                    <option>Select:</option>
                                    <option value="Material">Material</option>
                                    <option value="Remix">Remix</option>
                                    <option value="CSS">CSS</option>
                                    <option value="FontAwesome">FontAwesome</option>
                                </InputSelect>
                                Icon Set
                            </label>
                        <Preview Kit=kit.Kit>
                            @foreach (var icon in IconList)
                            {
                                <i class="@(Icon.Name == "FontAwesome" ? "fas " + icon : icon)" title=".@icon"></i>
                            }
                        </Preview>
                        </section>
                    </EditForm>
                }
            </section>
        </div>
    </div>
</div>

@code {
    [Parameter] public string? kitId { get; set; }

    (Kit Kit, KitRevision Revision) kit;
    IconLibrary? Icon;
    List<string>? IconList;
    EditContext? Context;
    
    protected async Task<(Kit Kit, KitRevision Revision)> GetAsync()
    {
        kit = await KitRepository.GetCurrentAsync(kitId);
        Icon = kit.Revision.Icons;
        IconList = Icon.GetRandomIconsAsync().Result;
        Context = new EditContext(kit.Revision.Icons);
        return kit;
    }

    protected async Task UpdateAsync((Kit Kit, KitRevision Revision) kit)
    {
        await KitRepository.UpdateAsync(kit.Kit.Id, kit.Revision.Id);
    }
}
