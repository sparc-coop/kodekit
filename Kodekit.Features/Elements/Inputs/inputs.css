/* Forms */
/* ============================================ */

/**
 * Reset form fields to make them styleable
 */

input,
optgroup,
select,
textarea {
    -webkit-appearance: none;
    appearance: none;
    vertical-align: middle;
    color: inherit;
    font: inherit;
    background: transparent;
    padding: 0;
    margin: 0;
    outline: 0;
    border-radius: 0;
    text-align: inherit;
}

/**
 * Reset radio and checkbox appearance to preserve their look in iOS.
 */

[type="checkbox"] {
    -webkit-appearance: checkbox;
    appearance: checkbox;
}

[type="radio"] {
    -webkit-appearance: radio;
    appearance: radio;
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

input {
    /* 1 */
    overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

select {
    /* 1 */
    text-transform: none;
}

    /**
 * Remove arrow in IE10 & IE11
 */

    select::-ms-expand {
        display: none;
    }

/**
 * Remove padding
 */

option {
    padding: 0;
}

/**
 * Reset to invisible
 */

fieldset {
    margin: 0;
    padding: 0;
    min-width: 0;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */

textarea {
    overflow: auto;
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
    height: auto;
}

/**
 * 1. Correct the outline style in Safari.
 */

[type="search"] {
    outline-offset: -2px; /* 1 */
}

    /**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

    [type="search"]::-webkit-search-decoration {
        -webkit-appearance: none;
    }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
    -webkit-appearance: button; /* 1 */
    font: inherit; /* 2 */
}

/**
 * Clickable labels
 */

label[for] {
    cursor: pointer;
}



input, textarea, select {
    padding: var(--padding-vertical) var(--padding-horizontal);
    border-radius: var(--border-radius, 4px);
    border: var(--border-width, 1px) solid var(--grey-300);
    color: var(--grey-900);
    letter-spacing: 0.02em;
    /* Do we need these styles, because it is the same as h6 font-size: 16px; */
    line-height: 120%;
    font-size: var(--font-size);
    font-weight: var(--font-weight);
}

    input::placeholder, textarea::placeholder, select::placeholder {
        color: var(--grey-300);
    }

    input:focus, textarea:focus, input.selected, textarea.selected, select:focus, select.selected, .selected input {
        border-color: var(--primary-500);
    }

    input:disabled, textarea:disabled, select:disabled, .disabled input {
        border-color: var(--grey-300);
        color: var(--grey-300);
    }

label.disabled {
    color: var(--grey-300);
}

label.error {
    color: var(--error-500);
}

    input:invalid, textarea:invalid, input.error, textarea.error, select:invalid, select.error, label.error input, label.error textarea, label.error select {
        border-color: var(--error-500);
        color: var(--error-500);
    }

        input:invalid::placeholder, textarea:invalid::placeholder, input.invalid::placeholder, textarea.invalid::placeholder {
            color: var(--error-500);
        }

input[type=checkbox], input[type=radio] {
    background-color: transparent;
    border-color: var(--grey-300);
    border-width: 2px;
    border-radius: var(--border-radius, 4px);
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    width: var(--font-size, 16px);
    height: var(--font-size, 16px);
    cursor: pointer;
    display: grid;
    place-content: center;
    padding: 0;
    transform: translateY(calc(var(--border-radius, 0) / -2));
}

    input[type=checkbox]:only-child, input[type=radio]:only-child {
        padding-left: 0;
    }

    input[type="checkbox"]:focus, input[type=radio]:focus {
        border-color: var(--active-500, var(--grey-100));
        outline: none;
    }

    input[type="checkbox"]::before, input[type=radio]::before {
        content: "";
        width: calc(var(--font-size) * 0.4);
        height: calc(var(--font-size) * 0.4);
        transform: scale(0);
        transition: 120ms transform ease-in-out;
        box-shadow: inset 1em 1em var(--active-500, var(--grey-100));
    }

    input[type=checkbox]:checked, input[type=radio]:checked {
        border-color: var(--active-500, var(--grey-100));
    }

        input[type="checkbox"]:checked::before, input[type=radio]:checked::before {
            transform: scale(1);
        }

input[type=checkbox]:disabled, input[type=radio]:disabled {
    border-color: var(--grey-100);
    cursor: not-allowed;
}

    input[type=checkbox]:checked:disabled::before, input[type=radio]:checked:disabled::before {
        box-shadow: inset 1em 1em var(--grey-100);
    }

input[type=radio] {
    border-radius: 50%;
}

    input[type=radio]::before {
        border-radius: 50%;
    }

label > svg {
    fill: var(--grey-300);
    position: absolute;
    top: 50%;
    margin-top: -10px;
    left: var(--padding-horizontal);
    width: 20px;
    height: 20px;
}

label.error > svg {
    fill: var(--error-500);
}

label.disabled > svg {
    fill: var(--grey-300);
}

label input {
    padding-left: 40px;
}

    label input:only-child {
        padding-left: var(--padding-horizontal);
    }

label.switch {
    position: relative;
    display: flex;
    height: var(--font-size);
    gap: calc(var(--font-size) * 2.45);
    align-items: center;
    margin-bottom: 20px;
}

    label.switch .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        width: calc(var(--font-size) * 1.66);
        height: var(--font-size);
        background-color: transparent;
        border: 2px solid var(--grey-300);
        -webkit-transition: .4s;
        transition: .4s;
        border-radius: var(--font-size);
    }

        label.switch .slider:before {
            position: absolute;
            content: "";
            height: calc(var(--font-size) * 0.62);
            width: calc(var(--font-size) * 0.62);
            left: calc(var(--font-size) * 0.10);
            top: 50%;
            transform: translate(0, -50%);
            border-radius: 50%;
            background-color: var(--grey-300);
            -webkit-transition: .4s;
            transition: .4s;
        }

    label.switch input[type=checkbox] {
        opacity: 0;
        width: 0;
        height: 0;
    }

        label.switch input[type=checkbox]:checked + .slider {
            background-color: transparent;
            border: 2px solid var(--active-500, var(--grey-100));
        }

            label.switch input[type=checkbox]:checked + .slider:before {
                transform: translate(calc(var(--font-size) * 0.62), -50%);
                background-color: var(--active-500, var(--grey-100));
                top: 50%;
            }


select {
    appearance: none;
    background-color: transparent;
    margin: 0;
    width: 100%;
    outline: none;
    background-image: url("data:image/svg+xml;utf8,<svg fill='%23787980' height='16' viewBox='0 0 24 24' width='16' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>");
    background-repeat: no-repeat;
    background-position: right var(--padding-horizontal, 1) center;
}

option:hover {
    box-shadow: 0 0 10px 100px var(--grey-100) inset;
}

option:checked {
    background-color: var(--grey-100);
}
