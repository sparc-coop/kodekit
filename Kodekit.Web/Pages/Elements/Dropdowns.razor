@inherits HighlightPageBase
@page  "/{kitId}/dropdowns"

<div class="dropdowns page">
    <div class="page__container">
        <header>
            <div class="title">Elements</div>
            <h2>Dropdowns</h2>
            <p>
                Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus.
            </p>
        </header>
        <div class="content">
            <h3>Dropdown Styling</h3>
            <p class="subheader">
                Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus.
            </p>
            <aside>This element inherits direct styling from <a href="/inputs">Inputs & Textareas</a> as defaults.</aside>
            <div class="section-container">
                <label class="switch">
                    <input type="checkbox" @bind=Model.OverwriteInherited>
                    <span class="slider"></span>
                </label>
                Overwrite inherited styling
            </div>
            @if (Model != null)
            {
                <EditForm Model="@Model">
                    <div class="section">
                        <label>
                            Font Size
                            <InputNumber @bind-Value="Model.FontSize" />
                        </label>
                        <label>
                            Font Weight
                           <FontWeights @bind-Value=Model.FontWeight />
                        </label>
                        <label>
                            Vertical Padding
                            <InputNumber @bind-Value="Model.VerticalPadding" />
                        </label>
                        <label>
                            Horizontal Padding
                            <InputNumber @bind-Value="Model.HorizontalPadding" />
                        </label>
                        <label>
                            Corner Radius
                            <InputNumber @bind-Value="Model.CornerRadius" />
                        </label>
                        <label>
                            Border Width
                            <InputNumber @bind-Value="Model.BorderWidth" />
                        </label>
                    </div>

                    <div class="preview-example">
                        <select>
                            <option selected>Dropdown Menu</option>
                            <option>Default Row</option>
                            <option>Default Row</option>
                            <option>Default Row</option>
                        </select>
                        <select>
                            <option selected>Dropdown Menu</option>
                            <option>Default Row</option>
                            <option>Default Row</option>
                            <option>Default Row</option>
                        </select>
                        <select>
                            <option selected>Dropdown Menu</option>
                            <option>Default Row</option>
                            <option>Default Row</option>
                            <option>Default Row</option>
                        </select>
                        <select>
                            <option selected>Dropdown Menu</option>
                            <option>Default Row</option>
                            <option>Default Row</option>
                            <option>Default Row</option>
                        </select>
                    </div>
                    <pre>
                    <code>
&lt;select&gt;
    &lt;option selected&gt;Dropdown Menu&lt;/option&gt;
    &lt;option&gt;Default Row&lt;/option&gt;
    &lt;option&gt;Default Row&lt;/option&gt;
    &lt;option&gt;Default Row&lt;/option&gt;
&lt;/select&gt;
                        </code>
                    </pre>
                    <SaveAndContinue OnSubmit=Submit NextPage="anchors" />
                </EditForm>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public string kitId { get; set; }
    UpdateDropdownsModel Model;

    protected override async Task OnInitializedAsync()
    {
        Model = await PublicApi().GetDropdownsAsync(kitId);
    }

    private async Task Submit()
    {
        await PublicApi().UpdateDropdownsAsync(Model);
    }
}
