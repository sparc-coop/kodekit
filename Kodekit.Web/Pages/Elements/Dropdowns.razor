@inherits HighlightPageBase<UpdateDropdownsModel>
@page "/{kitId}/dropdowns"

<div class="dropdowns page">
    <div class="page__container">
        <header>
            <div class="title">Elements</div>
            <h2>Dropdowns</h2>
            <p>
                Use to select from a series of choices.
            </p>
        </header>
        <div class="content">
            <h3>Dropdown Styling</h3>
            <p class="subheader">
                The &lt;select&gt; element defines a dropdown list. The &lt;option&gt; elements define options that can be selected. To define a pre-selected option, add the selected attribute to the option.
            </p>
            <aside>This element inherits direct styling from <a href="@($"/{kitId}/inputs")">Inputs & Textareas</a> as defaults.</aside>
            @if (Model != null)
            {
                <EditForm EditContext="@Context">
                    <div class="section">
                        <Switch @bind-Value=Model.OverwriteInherited Title="Overwrite inherited styling" />
                    </div>
                    @if (Model.OverwriteInherited)
                    {
                        <div class="section">
                            <label>
                                Font Size (px)
                                <InputNumber @bind-Value="Model.FontSize" min="1" />
                            </label>
                            <label>
                                Font Weight
                                <InputFontWeight @bind-Value=Model.FontWeight />
                            </label>
                            <label>
                                Vertical Padding (px)
                                <InputNumber @bind-Value="Model.VerticalPadding" min="0" />
                            </label>
                            <label>
                                Horizontal Padding (px)
                                <InputNumber @bind-Value="Model.HorizontalPadding" min="0" />
                            </label>
                            <label>
                                Corner Radius (px)
                                <InputNumber @bind-Value="Model.CornerRadius" min="0" />
                            </label>
                            <label>
                                Border Width (px)
                                <InputNumber @bind-Value="Model.BorderWidth" min="0" />
                            </label>
                        </div>
                    }

                    <Preview Kit=kit>
                            <select>
                                <option>Dropdown Menu</option>
                                <option>Default Row</option>
                                <option selected>Selected Row</option>
                                <option>Default Row</option>
                            </select>
                    </Preview>
                </EditForm>
            }
        </div>
    </div>
</div>

@code {
    protected override async Task<UpdateDropdownsModel> GetAsync()
    {
        return await PublicApi().GetDropdownsAsync(kitId);
    }

    protected override async Task<Kit> UpdateAsync()
    {
        return await PublicApi().UpdateDropdownsAsync(Model);
    }
}
