@inherits HighlightPageBase
@page "/{kitId}/inputs"

<div class="inputs page">
    <div class="page__container">
        <header>
            <div class="title">Elements</div>
            <h2>Inputs & Textareas</h2>
            <p>
                Use to collect text input.
            </p>
        </header>
        <div class="content">
            <h3>Form Styling</h3>
            <p class="subheader">
                Input collects a single line of text, while a textarea can receive multiple lines of text.
            </p>
            @if (Model != null)
            {
                <EditForm EditContext="@Context"> 
                    <div class="section">
                        <div>
                            <label>
                                Input Font Size (px)
                                <InputNumber @bind-Value="Model.FontSize" min="1" placeholder="16" />
                            </label>
                            <label>
                                Input Font Weight
                                <FontWeights @bind-Value="Model.FontWeight" />
                            </label>
                        </div>
                        <div>
                            <label>
                                Vertical Padding (px)
                                <InputNumber @bind-Value="Model.VerticalPadding" min="0" placeholder="8" />
                            </label>
                            <label>
                                Horizontal Padding (px)
                                <InputNumber @bind-Value="Model.HorizontalPadding" min="0" placeholder="16" />
                            </label>
                            <label>
                                Corner Radius (px)
                                <InputNumber @bind-Value="Model.CornerRadius" min="0" placeholder="4" />
                            </label>
                            <label>
                                Border Width (px)
                                <InputNumber @bind-Value="Model.BorderWidth" min="0" placeholder="1" />
                            </label>
                        </div>
                    </div>

                    <Preview KitId=@kitId RevisionId=@revisionId>
                        <label>
                            <input placeholder="Placeholder" />
                        </label>
                        <label>
                            <img src="/images/person-icon.svg" alt="Person Icon" />
                            <input placeholder="Placeholder" />
                        </label>
                        <textarea>Placeholder</textarea>
                    </Preview>

                    <h3>Input & Textarea states</h3>
                    <p class="subheader">
                        Placeholder text appears by default before any text has been entered by a user. Selected styling is applied when a user is typing into the input box. Entered styling is applied once the input has been filled out. Error styling is applied when requirements set on the form have not been fulfilled, and disabled styling is applied when a user is prevented from interacting with the input.
                    </p>

                    <Preview KitId=@kitId RevisionId=@revisionId>
                        <label>
                            Placeholder
                            <img src="/images/person-icon.svg" alt="Person Icon" />
                            <input placeholder="username" />
                            <span>Enter your username.</span>
                        </label>
                        <label>
                            Selected
                            <img src="/images/person-icon.svg" alt="Person Icon" />
                            <input class="selected" placeholder="username" />
                            <span>Enter your username.</span>
                        </label>
                        <label>
                            Entered
                            <img src="/images/person-icon.svg" alt="Person Icon" />
                            <input value="Kodekit" />
                            <span>Enter your username.</span>
                        </label>
                        <label class="error">
                            Error
                            <img src="/images/person-error-icon.svg" alt="Person Input Error Icon" />
                            <input class="invalid" value="username" />
                            <span>Username is taken.</span>
                        </label>
                        <label class="disabled">
                            Disabled
                            <img src="/images/person-disabled-icon.svg" alt="Person Input Disabled Icon" />
                            <input value="enter username" disabled />
                            <span></span>
                        </label>
                    </Preview>
                </EditForm>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public string kitId { get; set; }
    string revisionId { get; set; }
    UpdateInputsModel Model;
    EditContext Context;

    protected override async Task OnInitializedAsync()
    {
        Model = await PublicApi().GetInputsAsync(kitId);
        Context = new EditContext(Model);
        Context.OnFieldChanged += HandleFieldChanged;
    }

    private async void HandleFieldChanged(object sender, FieldChangedEventArgs e)
    {
        var result = await PublicApi().UpdateInputsAsync(Model);
        revisionId = result.CurrentRevisionId;
    }
}
