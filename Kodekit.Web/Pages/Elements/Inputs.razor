@inherits HighlightPageBase<UpdateInputsModel>
@page "/{kitId}/inputs"

<div class="inputs page">
    <div class="page__container">
        <header>
            <div class="title">Elements</div>
            <h2>Inputs & Textareas</h2>
            <p>
                Use to collect text input.
            </p>
        </header>
        <div class="content">
            <header>
                <h3>Form Styling</h3>
                <p>
                    Input collects a single line of text, while a textarea can receive multiple lines of text.
                </p>
            </header>
            @if (Model != null)
            {
                <EditForm EditContext="@Context">
                    <div class="section">
                        <div>
                            <label>
                                Input Font Size (px)
                                <InputNumber @bind-Value="Model.FontSize" min="1" />
                            </label>
                            <label>
                                Input Font Weight
                                <InputFontWeight @bind-Value="Model.FontWeight" />
                            </label>
                        </div>
                        <div>
                            <label>
                                Vertical Padding (px)
                                <InputNumber @bind-Value="Model.VerticalPadding" min="0" />
                            </label>
                            <label>
                                Horizontal Padding (px)
                                <InputNumber @bind-Value="Model.HorizontalPadding" min="0" />
                            </label>
                            <label>
                                Corner Radius (px)
                                <InputNumber @bind-Value="Model.CornerRadius" min="0" />
                            </label>
                            <label>
                                Border Width (px)
                                <InputNumber @bind-Value="Model.BorderWidth" min="0" />
                            </label>
                        </div>
                    </div>

                    <Preview Kit=kit>
                        <label>
                            <input placeholder="Placeholder" />
                        </label>
                        <label>
                            <PersonSvg />
                            <input placeholder="Placeholder" />
                        </label>
                        <textarea placeholder="Placeholder"></textarea>
                    </Preview>

                    <header>
                        <h3>Input & Textarea states</h3>
                        <p>
                            Placeholder text appears by default before any text has been entered by a user. Selected styling is applied when a user is typing into the input box. Entered styling is applied once the input has been filled out. Error styling is applied when requirements set on the form have not been fulfilled, and disabled styling is applied when a user is prevented from interacting with the input.
                        </p>
                    </header>

                    <Preview Kit=kit>
                        <label>
                            Placeholder
                            <PersonSvg />
                            <input placeholder="username" />
                            <span>Enter your username.</span>
                        </label>
                        <label class="selected">
                            Selected
                            <PersonSvg />
                            <input placeholder="username" />
                            <span>Enter your username.</span>
                        </label>
                        <label>
                            Entered
                            <PersonSvg />
                            <input value="Kodekit" />
                            <span>Enter your username.</span>
                        </label>
                        <label class="error">
                            Error
                            <PersonSvg />
                            <input class="invalid" value="username" />
                            <span>Username is taken.</span>
                        </label>
                        <label class="disabled">
                            Disabled
                            <PersonSvg />
                            <input value="enter username" disabled />
                            <span>Enter your name first.</span>
                        </label>
                    </Preview>
                </EditForm>
            }
        </div>
    </div>
</div>

@code {
    protected override async Task<UpdateInputsModel> GetAsync()
    {
        return await PublicApi().GetInputsAsync(kitId);
    }

    protected override async Task<Kit> UpdateAsync()
    {
        return await PublicApi().UpdateInputsAsync(Model);
    }
}
