@inherits HighlightPageBase
@page "/{kitId}/inputs"

<div class="inputs page">
    <div class="page__container">
        <header>
            <div class="title">Elements</div>
            <h2>Inputs & Textareas</h2>
            <p>
                Use to collect text input.
            </p>
        </header>
        <div class="content">
            <h3>Form Styling</h3>
            <p class="subheader">
                Input collects a single line of text, while a textarea can receive multiple lines of text.
            </p>
            @if (Model != null)
            {
                <EditForm Model="@Model">
                    <div class="section">
                        <div>
                            <label>
                                Input Font Size (px)
                                <InputNumber @bind-Value="Model.FontSize" @oninput="Submit" min="1"/>
                            </label>
                            <label>
                                Input Font Weight
                                <FontWeights @bind-Value="Model.FontWeight" OnValueChanged="Submit"/>
                            </label>
                        </div>
                        <div>
                            <label>
                                Vertical Padding (px)
                                <InputNumber @bind-Value="Model.VerticalPadding" @oninput="Submit" min="0" />
                            </label>
                            <label>
                                Horizontal Padding (px)
                                <InputNumber @bind-Value="Model.HorizontalPadding" @oninput="Submit" min="0" />
                            </label>
                            <label>
                                Corner Radius (px)
                                <InputNumber @bind-Value="Model.CornerRadius" @oninput="Submit" min="0" />
                            </label>
                            <label>
                                Border Width (px)
                                <InputNumber @bind-Value="Model.BorderWidth" @oninput="Submit" min="0" />
                            </label>
                        </div>
                    </div>
                    <div class="preview-example">
                        <label>
                            <input placeholder="Placeholder" />
                        </label>
                        <label class="icon-space icon-space--nolabel">
                            <img src="/images/person-icon.svg" alt="Person Icon" />
                            <input placeholder="Placeholder" />
                        </label>
                        <textarea>Placeholder</textarea>
                    </div>
                    <pre>
                        <code>
&lt;input placeholder="Placeholder" /&gt;

&lt;label&gt;
    &lt;img src="icon.svg" alt="Icon" /&gt;
    &lt;input placeholder="Placeholder" /&gt;
&lt;/label&gt;

&lt;textarea&gt;Placeholder&lt;/textarea&gt;
                        </code>
                    </pre>
                    <h3>Input & Textarea states</h3>
                    <p class="subheader">
                       Placeholder text appears by default before any text has been entered by a user. Selected styling is applied when a user is typing into the input box. Entered styling is applied once the input has been filled out. Error styling is applied when requirements set on the form have not been fulfilled, and disabled styling is applied when a user is prevented from interacting with the input.
                    </p>
                    <div class="preview-example">
                        <label class="icon-space">
                            Placeholder
                            <img src="/images/person-icon.svg" alt="Person Icon" />
                            <input placeholder="username" />
                            <span>Enter your username.</span>
                        </label>
                        <label class="icon-space">
                            Selected
                            <img src="/images/person-icon.svg" alt="Person Icon" />
                            <input class="selected" placeholder="username" />
                            <span>Enter your username.</span>
                        </label>
                        <label class="icon-space">
                            Entered
                            <img src="/images/person-icon.svg" alt="Person Icon" />
                            <input placeholder="username" />
                            <span>Enter your username.</span>
                        </label>
                        <label class="error icon-space">
                            Error
                            <img src="/images/person-error-icon.svg" alt="Person Input Error Icon" />
                            <input class="invalid" value="username" />
                            <span>Username is taken.</span>
                        </label>
                        <label class="disabled icon-space">
                            Disabled
                            <img src="/images/person-disabled-icon.svg" alt="Person Input Disabled Icon" />
                            <input value="enter username" disabled />
                            <span></span>
                        </label>
                    </div>
                    <pre>
                    <code>
&lt;label class="icon-space"&gt;
    Placeholder
    &lt;img src="/images/person-icon.svg" alt="Person Icon" /&gt;
    &lt;input placeholder="username" /&gt;
    &lt;span&gt;Enter your username.&lt;/span&gt;
&lt;/label&gt;
                </code>
            </pre>
                </EditForm>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public string kitId { get; set; }
    UpdateInputsModel Model;

    protected override async Task OnInitializedAsync()
    {
        Model = await PublicApi().GetInputsAsync(kitId);
    }

    private async Task Submit()
    {
        await PublicApi().UpdateInputsAsync(Model);
    }
}
