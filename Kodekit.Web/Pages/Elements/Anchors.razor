@inherits HighlightPageBase
@page  "/{kitId}/anchors"

<div class="anchors page">
    <div class="page__container">
        <header>
            <div class="title">Elements</div>
            <h2>Anchor Links</h2>
            <p>
                Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus.
            </p>
        </header>
        <div class="content">
            <h3>Link Styling</h3>
            <p class="subheader">
                Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus.
            </p>
            @if (kit != null)
            {
                <EditForm Model="@kit">
                    <div class="section">
                        <label>
                            Font Size
                            <input placeholder="16px" />
                        </label>
                        <label>
                            Font Weight
                            <select>
                                <option>Light (300)</option>
                                <option selected>Regular (400)</option>
                                <option>Medium (500)</option>
                                <option>Bold (700)</option>
                            </select>
                        </label>
                    </div>
                    <h4>Link States</h4>
                    <div class="section">
                        <label>
                            Default
                            <span>
                                <input type="color" value="@defaultColor" @oninput="@(e => defaultColor = e.Value.ToString())">
                                @defaultColor
                            </span>
                        </label>
                        <label>
                            Hover
                            <span>
                                <input type="color" value="@hoverColor" @oninput="@(e => hoverColor = e.Value.ToString())">
                                @hoverColor
                            </span>
                        </label>
                        <label>
                            Visited
                            <span>
                                <input type="color" value="@visitedColor" @oninput="@(e => visitedColor = e.Value.ToString())">
                                @visitedColor
                            </span>
                        </label>
                        <label>
                            Active
                            <span>
                                <input type="color" value="@activeColor" @oninput="@(e => activeColor = e.Value.ToString())">
                                @activeColor
                            </span>
                        </label>
                    </div>
                    <div class="preview-example">
                        <a href="#" style="color: @defaultColor;">Default</a>
                        <a href="#" class="hover" style="color: @hoverColor;">Hover</a>
                        <a href="#" class="visited" style="color: @visitedColor;">Visited</a>
                        <a href="#" class="active" style="color: @activeColor;">Active</a>
                    </div>
                    <pre>
                        <code>
&lt;a href="#"&gt;Link&lt;/a&gt;
                        </code>
                    </pre>
                    <SaveAndContinue OnSubmit=Submit NextPage="lists" />
                </EditForm>
            }
        </div>
    </div>
</div>

@code {
    private Kit kit;
    [Parameter] public string kitId { get; set; }
    string defaultColor;
    string hoverColor;
    string visitedColor;
    string activeColor;

    protected override async Task OnInitializedAsync()
    {
        kit = await PublicApi().GetKitAsync(kitId);
        defaultColor = "#17171A";
        hoverColor = "#0B5FFF";
        visitedColor = "#7FABFF";
        activeColor = "#00BFB2";
    }

    
    private async Task Submit()
    {
        await PublicApi().UpdateKitAsync(kit);
    }
}
