 @inherits HighlightPageBase<UpdateAnchorsModel>
@page  "/{kitId}/anchors"

<div class="anchors page">
    <div class="page__container">
        <header>
            <div class="title">Elements</div>
            <h2>Anchor Links</h2>
            <p>
                Hyperlinks used to navigate between pages internal and external. The &lt;a&gt; tag defines a hyperlink. The href attribute specifies the URL of the page the link goes to.
            </p>
        </header>
        <div class="content">
            <h3>Link Styling</h3>
            <p class="subheader">
                Default styling is applied before a link is clicked. Hover is applied on mouseover. Active is applied when the link is being clicked on. Visited is applied once the link has been navigated to.
            </p>
            @if (kit != null)
            {
                <EditForm EditContext="@Context">
                    <div class="section">
                        <label>
                            Font Weight
                            <InputFontWeight @bind-Value="Model.FontWeight" />
                        </label>
                    </div>
                    <h4>Link States</h4>
                    <div class="section">
                        <label>
                            Default
                            <InputColor @bind-Value="Model.DefaultColor" />
                        </label>
                        <label>
                            Hover
                            <InputColor @bind-Value="Model.HoverColor" />
                        </label>
                        <label>
                            Visited
                            <InputColor @bind-Value="Model.VisitedColor" />
                        </label>
                        <label>
                            Active
                            <InputColor @bind-Value="Model.ActiveColor" />
                        </label>
                    </div>
                    <Preview Kit=kit>
                        <a href="#@Guid.NewGuid()">Default</a>
                        <a href="#@Guid.NewGuid()" class="hover">Hover</a>
                        <a href="#@Guid.NewGuid()" class="visited">Visited</a>
                        <a href="#@Guid.NewGuid()" class="active">Active</a>
                    </Preview>
                </EditForm>
            }
        </div>
    </div>
</div>

@code {
    protected override async Task<UpdateAnchorsModel> GetAsync()
    {
        return await PublicApi().GetAnchorsAsync(kitId);
    }
    
    protected override async Task<Kit> UpdateAsync()
    {
        return await PublicApi().UpdateAnchorsAsync(Model);
    }
}
