@inherits HighlightPageBase
@page "/{kitId}/colors"

<div class="colors page">
    <div class="page__container">
        <header>
            <div class="title">Base Styles</div>
            <h2>Colors</h2>
            <p>
                Colors selected here will be applied throughout the kit. They will be 
                applied to their respective elements (such as primary and secondary buttons)
                &amp; system colors, as well as accessed via css variables.
            </p>
        </header>
        <div class="content">
            <!-- Contrast Checker Component Here -->
            <h3>Brand Colors</h3>
            <p>
                The brand colors are the three main colors that will be used to accent your site.
            </p>

            @if (Model != null)
            {
                <EditForm EditContext="@Context">
                    <div class="section">
                        <label>
                            Primary
                            <InputColor @bind-Value="Model.Primary" />
                        </label>

                        <label>
                            Secondary
                            <InputColor @bind-Value="Model.Secondary" />
                        </label>
                        <label>
                            Tertiary
                            <InputColor @bind-Value="Model.Tertiary" />
                        </label>
                    </div>
                    <Preview Kit=kit>
                        <div>
                            <label>Primary</label>
                            <div class="color-display" style="background-color: @Model.Primary"></div>
                            <div class="subcolor-display">
                                @foreach (var weight in Weights)
                                {
                                    <span style="background-color: var(--primary-@weight)"></span>
                                }
                            </div>
                        </div>
                        <div>
                            <label>Secondary</label>
                            <div class="color-display" style="background-color: @Model.Secondary"></div>
                            <div class="subcolor-display">
                                @foreach (var weight in Weights)
                                {
                                    <span style="background-color: var(--secondary-@weight)"></span>
                                }
                            </div>
                        </div>
                        <div>
                            <label>Tertiary</label>
                            <div class="color-display" style="background-color: @Model.Tertiary"></div>
                            <div class="subcolor-display">
                                @foreach (var weight in Weights)
                                {
                                    <span style="background-color: var(--tertiary-@weight)"></span>
                                }
                            </div>
                        </div>
                    </Preview>

                    <h3>Grayscale</h3>
                    <p class="subheader">
                        The grayscale colors will primarily be used for text.
                    </p>
                    <div class="section">
                        <label>
                            Darkest
                            <InputColor @bind-Value="Model.Darkest" />
                        </label>
                        <label>
                            Lightest
                            <InputColor @bind-Value="Model.Lightest" />
                        </label>
                    </div>

                    <Preview Kit=kit AdditionalClass="greyscale">
                        @foreach (var weight in Weights)
                        {
                            <div>
                                <label>@weight</label>
                                <div class="color-display" style="background-color: var(--greyscale-@weight)"></div>
                            </div>
                        }
                    </Preview>

                    <h3>System Colors</h3>
                    <p class="subheader">
                        The system colors are used to highlight alerts.
                    </p>
                    <div class="section">
                        <label>
                            Error
                            <InputColor @bind-Value="Model.Error" />
                        </label>
                        <label>
                            Warning
                            <InputColor @bind-Value="Model.Warning" />
                        </label>
                        <label>
                            Success
                            <InputColor @bind-Value="Model.Success" />
                        </label>
                    </div>
                    <Preview Kit=kit>
                        <div>
                            <label>Error</label>
                            <div class="color-display" style="background-color: var(--error-500)"></div>
                        </div>
                        <div>
                            <label>Warning</label>
                            <div class="color-display" style="background-color: var(--warning-500)"></div>
                        </div>
                        <div>
                            <label>Success</label>
                            <div class="color-display" style="background-color: var(--success-500)"></div>
                        </div>
                    </Preview>

                    <Preview Kit=kit>
                        <h3>Preview</h3>
                        <section>
                            <div class="preview-mockup--left">
                                <img src="/images/example1.png" alt="Example mockup" />
                                <div>
                                    <h4 class="color-dark" style="color: @Model.Darkest;">Brand Colors</h4>
                                    <h5 class="color-tertiary" style="color: @Model.Tertiary;">Information</h5>
                                    <p>
                                        Lorem ipsum dolor sit amet, consectetuer adipiscing elit
                                    </p>
                                    <button style="background: @Model.Primary; color: @Model.Lightest;">Primary CTA</button>
                                </div>
                            </div>
                            <div class="preview-mockup--right">
                                <h4 class="color-dark" style="color: @Model.Darkest;">Brand Colors</h4>
                                <h5 class="color-tertiary" style="color: @Model.Tertiary;">Information</h5>
                                <p>
                                    Lorem ipsum dolor sit amet, consectetuer adipiscing elit
                                </p>
                                <div class="buttons">
                                    <button style="background: @Model.Primary; color: @Model.Lightest;">Primary CTA</button>
                                    <button style="color: @Model.Secondary;" class="secondary">Secondary CTA</button>
                                </div>
                            </div>
                        </section>
                    </Preview>
                </EditForm>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public string kitId { get; set; }
    ColorsModel Model;
    Kit kit;
    EditContext Context;

    List<string> Weights = new List<string> { "900", "800", "700", "600", "500", "400", "300", "200", "100", "50" };

    protected override async Task OnInitializedAsync()
    {
        Model = await PublicApi().GetColorsAsync(kitId);
        kit = await PublicApi().GetKitAsync(kitId);
        Context = new EditContext(Model);
        Context.OnFieldChanged += HandleFieldChanged;

    }

    private async void HandleFieldChanged(object sender, FieldChangedEventArgs e)
    {
        kit = await PublicApi().UpdateColorsAsync(Model);
    }
}
