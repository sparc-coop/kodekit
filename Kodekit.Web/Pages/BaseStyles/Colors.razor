@inherits HighlightPageBase
@page "/{kitId}/colors"

<div class="colors page">
    <div class="page__container">
        <header>
            <div class="title">Base Styles</div>
            <h2>Colors</h2>
            <p>
                Select the colors that will be used throughout the kit.
            </p>
        </header>
        <div class="content">
            <!-- Contrast Checker Component Here -->
            <h3>Brand Colors</h3>
            <p>
                The brand colors are the three main colors that will be used to accent your site.
            </p>

            @if (Model != null)
            {
                <EditForm Model="@Model">
                    <div class="section">
                        <label>
                            Primary
                            <span>
                                <input type="color" value="@Model.Primary" @onchange="@(e => { Model.Primary = e.Value.ToString(); Submit(); })">
                                @Model.Primary
                            </span>
                        </label>

                        <label>
                            Secondary
                            <span>
                                <input type="color" value="@Model.Secondary" @onchange="@(e => { Model.Secondary = e.Value.ToString(); Submit(); })">
                                @Model.Secondary
                            </span>
                        </label>
                        <label>
                            Tertiary
                            <span>
                                <input type="color" value=@Model.Tertiary @onchange="@(e => { Model.Tertiary = e.Value.ToString(); Submit(); })">
                                @Model.Tertiary
                            </span>
                        </label>
                    </div>
                    <div class="preview-example preview-example--colors">
                        <div>
                            <label>Primary</label>
                            <div class="color-display" style="background-color: @Model.Primary"></div>
                            <div class="subcolor-display">
                                @foreach (var weight in Weights)
                                {
                                    <span style="background-color: var(--primary-@weight)"></span>
                                }
                            </div>
                        </div>
                        <div>
                            <label>Secondary</label>
                            <div class="color-display" style="background-color: @Model.Secondary"></div>
                            <div class="subcolor-display">
                                @foreach (var weight in Weights)
                                {
                                    <span style="background-color: var(--secondary-@weight)"></span>
                                }
                            </div>
                        </div>
                        <div>
                            <label>Tertiary</label>
                            <div class="color-display" style="background-color: @Model.Tertiary"></div>
                            <div class="subcolor-display">
                                @foreach (var weight in Weights)
                                {
                                    <span style="background-color: var(--tertiary-@weight)"></span>
                                }
                            </div>
                        </div>
                    </div>
                    <pre>
                    <code>
&lt;!-- use directly as colors or background properties --&gt;
&lt;div class="color-primary"&gt;The power of small steps&lt;/div&gt;
&lt;div class="bg-primary"&gt;The power of small steps&lt;/div&gt;
                            </code>
                    <code class="language-scss" style="margin-top: -50px;">
//however it is best to use them as variables within your classes

.box {
    background-color: $primary-500;
}

.box-alt {
    background-color: $secondary-100;
}
                            </code>
                        </pre>
                    <h3>Grayscale</h3>
                    <p class="subheader">
                        The grayscale colors will primarily be used for text.
                    </p>
                    <div class="section">
                        <label>
                            Darkest
                            <span>
                                <input type="color" value="@Model.Darkest" @onchange="@(e => { Model.Darkest = e.Value.ToString(); Submit(); })">
                                @Model.Darkest
                            </span>
                        </label>
                        <label>
                            Lightest
                            <span>
                                <input type="color" value="@Model.Lightest" @onchange="@(e => { Model.Lightest = e.Value.ToString(); Submit(); })">
                                @Model.Lightest
                            </span>
                        </label>
                    </div>
                    <div class="preview-example preview-example--grayscale">
                        @*@foreach (var weight in Weights)
        {
            <div>
                <label>@weight</label>
                <div class="color-display" style="background-color: var(--greyscale-@weight)"></div>
            </div>
        }*@
                        <div>
                            <label>900</label>
                            <div class="color-display" style="background-color: @Model.Darkest"></div>
                        </div>
                        <div>
                            <label>800</label>
                            <div class="color-display" style="background-color: #2B2D39"></div>
                        </div>
                        <div>
                            <label>700</label>
                            <div class="color-display" style="background-color: #30313F"></div>
                        </div>
                        <div>
                            <label>600</label>
                            <div class="color-display" style="background-color: #393A4A"></div>
                        </div>
                        <div>
                            <label>500</label>
                            <div class="color-display" style="background-color: #6B6C7E"></div>
                        </div>
                        <div>
                            <label>400</label>
                            <div class="color-display" style="background-color: #A7A9BC"></div>
                        </div>
                        <div>
                            <label>300</label>
                            <div class="color-display" style="background-color: #CDCED9"></div>
                        </div>
                        <div>
                            <label>200</label>
                            <div class="color-display" style="background-color: #E7E7ED"></div>
                        </div>
                        <div>
                            <label>100</label>
                            <div class="color-display" style="background-color: #f7f7f7"></div>
                        </div>
                        <div>
                            <label>50</label>
                            <div class="color-display" style="background-color: @Model.Lightest"></div>
                        </div>
                    </div>
                    <pre>
                        <code class="language-scss">
//System Variables
$greyscale-900
$greyscale-800
$greyscale-700
$greyscale-600
$greyscale-500
$greyscale-400
$greyscale-300
$greyscale-200
$greyscale-100
                        </code>
                    </pre>
                    <h3>System Colors</h3>
                    <p class="subheader">
                        The system colors are used to highlight alerts.
                    </p>
                    <div class="section">
                        <label>
                            Error
                            <span>
                                <input type="color" value="@Model.Error" @onchange="@(e => { Model.Error = e.Value.ToString(); Submit(); })">
                                @Model.Error
                            </span>
                        </label>
                        <label>
                            Warning
                            <span>
                                <input type="color" value="@Model.Warning" @onchange="@(e => { Model.Warning = e.Value.ToString(); Submit(); })">
                                @Model.Warning
                            </span>
                        </label>
                        <label>
                            Success
                            <span>
                                <input type="color" value="@Model.Success" @onchange="@(e => { Model.Success = e.Value.ToString(); Submit(); })">
                                @Model.Success
                            </span>
                        </label>
                    </div>
                    <div class="preview-example preview-example--colors">
                        @*<div>
                            <label>Error</label>
                            <div class="color-display" style="background-color: var(--error-500)"></div>
                        </div>
                        <div>
                            <label>Warning</label>
                            <div class="color-display" style="background-color: var(--warning-500)"></div>
                        </div>
                        <div>
                            <label>Success</label>
                            <div class="color-display" style="background-color: var(--success-500)"></div>
                        </div>*@
                        <div>
                            <label>Error</label>
                            <div class="color-display" style="background-color: @Model.Error"></div>
                        </div>
                        <div>
                            <label>Warning</label>
                            <div class="color-display" style="background-color: @Model.Warning"></div>
                        </div>
                        <div>
                            <label>Success</label>
                            <div class="color-display" style="background-color: @Model.Success"></div>
                        </div>
                    </div>
                    <pre>
                    <code class="language-scss">
//System Variables
$error-900
$error-500
$error-100
$warning-900
$warning-500
$warning-100
$success-900
$success-500
$success-100
                        </code>
                        </pre>
                    <div class="preview-mockup">
                        <h3>Preview</h3>
                        <section>
                            <div class="preview-mockup--left">
                                <img src="/images/example1.png" alt="Example mockup" />
                                <div>
                                    <h4 class="color-dark" style="color: @Model.Darkest;">Brand Colors</h4>
                                    <h5 class="color-tertiary" style="color: @Model.Tertiary;">Information</h5>
                                    <p>
                                        Lorem ipsum dolor sit amet, consectetuer adipiscing elit
                                    </p>
                                    <button style="background: @Model.Primary; color: @Model.Lightest;">Primary CTA</button>
                                </div>
                            </div>
                            <div class="preview-mockup--right">
                                <h4 class="color-dark" style="color: @Model.Darkest;">Brand Colors</h4>
                                <h5 class="color-tertiary" style="color: @Model.Tertiary;">Information</h5>
                                <p>
                                    Lorem ipsum dolor sit amet, consectetuer adipiscing elit
                                </p>
                                <div class="buttons">
                                    <button style="background: @Model.Primary; color: @Model.Lightest;">Primary CTA</button>
                                    <button style="color: @Model.Secondary;" class="secondary">Secondary CTA</button>
                                </div>
                            </div>
                        </section>
                    </div>
                </EditForm>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public string kitId { get; set; }
    ColorsModel Model;
    List<string> Weights = new List<string> { "900", "800", "700", "600", "500", "400", "300", "200", "100", "50" };

    protected override async Task OnInitializedAsync()
    {
        Model = await PublicApi().GetColorsAsync(kitId);
    }

    private async Task Submit()
    {
        await PublicApi().UpdateColorsAsync(Model);
    }
}
