@inherits HighlightPageBase
@page "/{kitId}/typography"

<div class="typography page">
    <div class="page__container">
        <header>
            <div class="title">Base Styles</div>
            <h2>Typography</h2>
            <p>
                Select your font family, weight, size, line-height and typescale.
                This will then be applied to the <span>&lt;h1&gt;</span> - <span>&lt;h6&gt;</span> html tags.
            </p>
        </header>
        <div class="content">
            <h3>Heading Settings</h3>

            @if (Model != null)
            {
                @*                <AccessibilityChecker Model="Model"/>*@
                <EditForm EditContext="@Context">
                    <div class="section">
                        <label>
                            Preview Text
                            <input @bind-value="previewText" @bind-value:event="oninput" class="large" />
                        </label>
                        <label>
                            Heading Font
                            @if (Fonts.Items != null)
                            {
                                <InputSelect class="medium" @bind-Value="Model.Heading.FontFamily">
                                    @foreach (var font in Fonts.Items)
                                    {
                                <option value="@font.Family">
                                    @font.Family
                                </option>
                                    }
                        </InputSelect>
                            }
                        </label>
                        <label>
                            Default Heading Weight
                            <InputFontWeight @bind-Value="Model.Heading.FontWeight" />
                        </label>

                        <label>
                            Base Font Size (px)
                            <InputNumber @bind-Value="Model.Heading.FontSize" min="0" placeholder="14" />
                        </label>
                        <label>
                            Choose a Type Scale
                            <InputSelect class="medium" @bind-Value="Model.Heading.TypeScale">
                                @foreach (var scale in Model.TypeScales)
                                {
                                <option value="@scale.Key">
                                    @scale.Key (@scale.Value)
                                </option>
                                }
                        </InputSelect>
                    </label>
                    <label>
                        Base Line Height (px)
                        <InputNumber @bind-Value="Model.Heading.LineHeight" min="1" placeholder="18" />
                    </label>
                </div>
                <Preview Kit=kit>
                    <h1>@previewText</h1>
                    <label>Header 1 (H1)</label>
                    <h2>@previewText</h2>
                    <label>Header 2 (H2)</label>
                    <h3>@previewText</h3>
                    <label>Header 3 (H3)</label>
                    <h4>@previewText</h4>
                    <label>Header 4 (H4)</label>
                    <h5>@previewText</h5>
                    <label>Header 5 (H5)</label>
                    <h6>@previewText</h6>
                    <label>Header 6 (H6)</label>
                    <p class="subtitle">@previewText</p>
                    <label>Subtitle (.subtitle)</label>
                </Preview>

                <h3>Paragraph Settings</h3>

                <div class="section">
                    <label class="preview" style="margin-right: 32px;">
                        Preview Text
                        <textarea @bind-value="previewTextBody" @bind-value:event="oninput" />
                    </label>
                    <label>
                        Choose Body font
                        <InputSelect class="medium" @bind-Value="Model.Paragraph.FontFamily">
                            @if (Fonts.Items != null)
                                {
                                @foreach (var font in Fonts.Items)
                                    {
                                    <option value="@font.Family">
                                        @font.Family
                                    </option>
                                    }
                                }
                        </InputSelect>
                    </label>
                    <label>
                        Base Font Size (px)
                        <InputNumber @bind-Value="Model.Paragraph.FontSize" min="1" />
                    </label>
                    <label>
                        Choose a Type Scale
                        <InputSelect class="medium" @bind-Value=Model.Paragraph.TypeScale>
                            @foreach (var scale in Model.TypeScales)
                                {
                                <option value="@scale.Key">
                                    @scale.Key (@scale.Value)
                                </option>
                                }
                        </InputSelect>
                    </label>
                    <label>
                        Base Line Height (px)
                        <InputNumber @bind-Value="Model.Paragraph.LineHeight" min="1" />
                    </label>
                </div>
                <Preview Kit=kit>
                    <div>
                        <p class="large">@previewTextBody</p>
                        <label>Body Large - Font Size: xxpx (xem) / Line Height: 160%</label>
                    </div>
                    <div>
                        <p class="medium">@previewTextBody</p>
                        <label>Body - Font Size: xxpx (xem) / Line Height: 160%</label>
                    </div>
                    <div>
                        <p class="small">@previewTextBody</p>
                        <label>Body Small - Font Size: xxpx (xem) / Line Height: 160%</label>
                    </div>
                </Preview>
            </EditForm>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public string kitId { get; set; }
    private string previewText = "The power of small steps";
    private string previewTextBody = "What you do makes a difference. \nAnd you have to decide what kind of difference you want to make.";
    FontListResponse Fonts;
    GetTypographyResponse Model;
    Kit kit;
    EditContext Context;

    protected override async Task OnInitializedAsync()
    {
        Fonts = await PublicApi().GetGoogleFontsAsync("");
        Model = await PublicApi().GetTypographyAsync(kitId);
        kit = await PublicApi().GetKitAsync(kitId);
        Context = new EditContext(Model);
        Context.OnFieldChanged += HandleFieldChanged;
    }

    private async void HandleFieldChanged(object sender, FieldChangedEventArgs e)
    {
        var result = new UpdateTypographyModel
            {
                KitId = kitId,
                Headings = Model.Heading,
                Paragraphs = Model.Paragraph
            };

        kit = await PublicApi().UpdateTypographyAsync(result);
        StateHasChanged();
    }
}

