@inherits HighlightPageBase<ShadowsModel>
@page "/{kitId}/box-shadow"

<div class="effects-page page">
    <div class="page__container">
        <header>
            <div class="title">Effects</div>
            <h2>Box Shadow</h2>
            <p>
                Add box shadows to different elements.
            </p>
        </header>
        <div class="content">
            @if (Model != null)
            {
                <EditForm EditContext="@Context">
                    <h3>Small Shadow Settings</h3>
                    <div class="section">
                        <label>
                            X Length (px)
                            <InputNumber @bind-Value="Model.Small.X" class="small" />
                        </label>
                        <label>
                            Y Length (px)
                            <InputNumber @bind-Value="Model.Small.Y" class="small" />
                        </label>
                        <label>
                            Blur (px)
                            <InputNumber @bind-Value="Model.Small.Blur" class="small" />
                        </label>
                        <label>
                            Spread (px)
                            <InputNumber @bind-Value="Model.Small.Spread" class="small" />
                        </label>
                        <label>
                            Shadow Color
                           <InputColor @bind-Value="Model.Small.HexColor" />
                        </label>
                        <label>
                            Shadow Opacity (%)
                            <InputNumber @bind-Value="Model.Small.Opacity" class="small" />
                        </label>
                    </div>


                    <h3>X-Large Shadow Settings</h3>
                    <div class="section">
                        <label>
                            X Length (px)
                            <InputNumber @bind-Value="Model.XLarge.X" class="small" />
                        </label>
                        <label>
                            Y Length (px)
                            <InputNumber @bind-Value="Model.XLarge.Y" class="small" />
                        </label>
                        <label>
                            Blur (px)
                            <InputNumber @bind-Value="Model.XLarge.Blur" class="small" />
                        </label>
                        <label>
                            Spread (px)
                            <InputNumber @bind-Value="Model.XLarge.Spread" class="small" />
                        </label>
                        <label>
                            Shadow Color
                           <InputColor @bind-Value="Model.XLarge.HexColor" />
                        </label>
                        <label>
                            Shadow Opacity (%)
                            <InputNumber @bind-Value="Model.XLarge.Opacity" class="small" />
                        </label>
                    </div>

                    <Preview Kit=kit>
                        <div>
                            <label>Small Shadow</label>
                            <div class="shadow-100">
                            </div>
                        </div>
                        <div>
                            <label>Medium Shadow</label>
                            <div class="shadow-300">
                            </div>
                        </div>
                        <div>
                            <label>Large Shadow</label>
                            <div class="shadow-600">
                            </div>
                        </div>
                        <div>
                            <label>X-Large Shadow</label>
                            <div class="shadow-1000">
                            </div>
                        </div>
                    </Preview>
                </EditForm>
            }
        </div>
    </div>
</div>

@code {
    protected override async Task<ShadowsModel> GetAsync()
    {
        return await PublicApi().GetShadowAsync(kitId);
    }
    
    protected override async Task<Kit> UpdateAsync()
    {
        return await PublicApi().UpdateShadowAsync(Model);
    }
}
